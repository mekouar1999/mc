/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    son_1: THREE.Mesh;
    son_2: THREE.Mesh;
    son_3: THREE.Mesh;
    son_4: THREE.Mesh;
    son_5: THREE.Mesh;
    son_6: THREE.Mesh;
    son_7: THREE.Mesh;
    son_8: THREE.Mesh;
    son_9: THREE.Mesh;
    son_10: THREE.Mesh;
    son_11: THREE.Mesh;
    son_12: THREE.Mesh;
    son_13: THREE.Mesh;
    son_14: THREE.Mesh;
    son_15: THREE.Mesh;
    son_16: THREE.Mesh;
    son_17: THREE.Mesh;
    son_18: THREE.Mesh;
    son_19: THREE.Mesh;
    son_20: THREE.Mesh;
    son_21: THREE.Mesh;
    son_22: THREE.Mesh;
    son_23: THREE.Mesh;
    son_24: THREE.Mesh;
    son_25: THREE.Mesh;
    son_26: THREE.Mesh;
    son_27: THREE.Mesh;
    son_28: THREE.Mesh;
    son_29: THREE.Mesh;
    son_30: THREE.Mesh;
    son_31: THREE.Mesh;
    son_32: THREE.Mesh;
    son_33: THREE.Mesh;
    son_34: THREE.Mesh;
    son_35: THREE.Mesh;
    son_36: THREE.Mesh;
    son_37: THREE.Mesh;
    son_38: THREE.Mesh;
    son_39: THREE.Mesh;
    son_40: THREE.Mesh;
    son_41: THREE.Mesh;
    son_42: THREE.Mesh;
    son_43: THREE.Mesh;
    son_44: THREE.Mesh;
    son_45: THREE.Mesh;
    son_46: THREE.Mesh;
    son_47: THREE.Mesh;
    son_48: THREE.Mesh;
    son_49: THREE.Mesh;
    son_50: THREE.Mesh;
    son_51: THREE.Mesh;
    son_52: THREE.Mesh;
    son_53: THREE.Mesh;
    son_54: THREE.Mesh;
    son_55: THREE.Mesh;
    son_56: THREE.Mesh;
    son_57: THREE.Mesh;
    son_58: THREE.Mesh;
    son_59: THREE.Mesh;
    son_60: THREE.Mesh;
    son_61: THREE.Mesh;
    son_62: THREE.Mesh;
    son_63: THREE.Mesh;
    son_64: THREE.Mesh;
    son_65: THREE.Mesh;
    son_66: THREE.Mesh;
    son_67: THREE.Mesh;
    son_68: THREE.Mesh;
    son_69: THREE.Mesh;
    son_70: THREE.Mesh;
    son_71: THREE.Mesh;
    son_72: THREE.Mesh;
    son_73: THREE.Mesh;
    son_74: THREE.Mesh;
    son_75: THREE.Mesh;
    son_76: THREE.Mesh;
    son_77: THREE.Mesh;
    son_78: THREE.Mesh;
    son_79: THREE.Mesh;
    son_80: THREE.Mesh;
  };
  materials: {
    Blanc_PVC: THREE.MeshPhysicalMaterial;
    Translucent_Glass_Blue: THREE.MeshPhysicalMaterial;
    Metal_porte: THREE.MeshPhysicalMaterial;
    Gris_Serrure: THREE.MeshPhysicalMaterial;
    FrontColor: THREE.MeshPhysicalMaterial;
    _Translucent_Glass_Blue_1: THREE.MeshPhysicalMaterial;
    _Color_000_1: THREE.MeshPhysicalMaterial;
    _Stone_Vein_Gray_1: THREE.MeshPhysicalMaterial;
    _Wood_Cherry_Original_1: THREE.MeshPhysicalMaterial;
    Color_007: THREE.MeshPhysicalMaterial;
    Metal_Seamed: THREE.MeshPhysicalMaterial;
    Sphere: THREE.MeshPhysicalMaterial;
    BikiniBottom: THREE.MeshPhysicalMaterial;
    BikiniTop: THREE.MeshPhysicalMaterial;
    Parole: THREE.MeshPhysicalMaterial;
    hair1: THREE.MeshPhysicalMaterial;
    hairTie1: THREE.MeshPhysicalMaterial;
    eyeLashes: THREE.MeshPhysicalMaterial;
    skinPink: THREE.MeshPhysicalMaterial;
    Transparent: THREE.MeshPhysicalMaterial;
    EyeWhite: THREE.MeshPhysicalMaterial;
    EyeIris1: THREE.MeshPhysicalMaterial;
    EyeIris2: THREE.MeshPhysicalMaterial;
    EyeIris3: THREE.MeshPhysicalMaterial;
    EyePupil: THREE.MeshPhysicalMaterial;
    skin: THREE.MeshPhysicalMaterial;
    nipple: THREE.MeshPhysicalMaterial;
    SkinLips: THREE.MeshPhysicalMaterial;
    skinDark1: THREE.MeshPhysicalMaterial;
    SkinDark: THREE.MeshPhysicalMaterial;
    Color_C08: THREE.MeshPhysicalMaterial;
    _Color_B02_1: THREE.MeshPhysicalMaterial;
    Color_008: THREE.MeshPhysicalMaterial;
    Color_I21: THREE.MeshPhysicalMaterial;
    Body1: THREE.MeshPhysicalMaterial;
    Color_C12: THREE.MeshPhysicalMaterial;
    Color_C04: THREE.MeshPhysicalMaterial;
    ToeNails1: THREE.MeshPhysicalMaterial;
    Color_I02: THREE.MeshPhysicalMaterial;
    Pupil1: THREE.MeshPhysicalMaterial;
    hair2: THREE.MeshPhysicalMaterial;
    M_01___Default1: THREE.MeshPhysicalMaterial;
    M_02___Default1: THREE.MeshPhysicalMaterial;
    Vegetation_Blur7: THREE.MeshPhysicalMaterial;
    _Asphalt_New_1: THREE.MeshPhysicalMaterial;
    GDLM55_CAR_BLACK: THREE.MeshPhysicalMaterial;
    GDLM56_CAR_BODY5: THREE.MeshPhysicalMaterial;
    GDLM60_CAR_GLASS: THREE.MeshPhysicalMaterial;
    GDLM63_CAR_GREY: THREE.MeshPhysicalMaterial;
    GDLM57_CAR_BRAKELIGHT: THREE.MeshPhysicalMaterial;
    GDLM58_CAR_CHROME: THREE.MeshPhysicalMaterial;
    GDLM59_CAR_FRONTLIGHT: THREE.MeshPhysicalMaterial;
    GDLM61_CAR_INTERIOR: THREE.MeshPhysicalMaterial;
    GDLM62_CAR_SIDELIGHT: THREE.MeshPhysicalMaterial;
    seabean_clean_middle: THREE.MeshPhysicalMaterial;
    seabean_clean_bottom: THREE.MeshPhysicalMaterial;
    seabean_clean_top: THREE.MeshPhysicalMaterial;
    _Groundcover_Wood_Mix_1: THREE.MeshPhysicalMaterial;
    Water_Pool_Light: THREE.MeshPhysicalMaterial;
    Logo_Auger: THREE.MeshPhysicalMaterial;
    Wood_Board_Cork: THREE.MeshPhysicalMaterial;
    _Color_000_22: THREE.MeshPhysicalMaterial;
    Translucent_Glass_Gray: THREE.MeshPhysicalMaterial;
    _Color_006_1: THREE.MeshPhysicalMaterial;
    ananas_inneneseite: THREE.MeshPhysicalMaterial;
    _Groundcover_RiverRock_4inch_2: THREE.MeshPhysicalMaterial;
    _Translucent_Glass_Gray_1: THREE.MeshPhysicalMaterial;
    _Water_Deep_2: THREE.MeshPhysicalMaterial;
    cocktailpamle_rot: THREE.MeshPhysicalMaterial;
    _Color_A01_10: THREE.MeshPhysicalMaterial;
    _Color_A01_9: THREE.MeshPhysicalMaterial;
    _Water_Deep_3: THREE.MeshPhysicalMaterial;
    cocktailpamle_rot_1: THREE.MeshPhysicalMaterial;
    Roofing_Shingles_Multi: THREE.MeshPhysicalMaterial;
    Cladding_Stucco_White: THREE.MeshPhysicalMaterial;
    Vegetation_Grass_Artificial: THREE.MeshPhysicalMaterial;
    Groundcover_Gravel_Indian: THREE.MeshPhysicalMaterial;
    _Stone_Sandstone_Ashlar_Light_1: THREE.MeshPhysicalMaterial;
    Brick_Pavers_Modular: THREE.MeshPhysicalMaterial;
    Fencing_Picket_Concave: THREE.MeshPhysicalMaterial;
  };
};

export function SonmaiModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/son.glb")  as unknown as GLTFResult;;
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_1.geometry}
          material={materials.Blanc_PVC}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_2.geometry}
          material={materials.Translucent_Glass_Blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_3.geometry}
          material={materials.Metal_porte}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_4.geometry}
          material={materials.Gris_Serrure}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_5.geometry}
          material={materials.FrontColor}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_6.geometry}
          material={materials._Translucent_Glass_Blue_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_7.geometry}
          material={materials._Color_000_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_8.geometry}
          material={materials._Stone_Vein_Gray_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_9.geometry}
          material={materials._Wood_Cherry_Original_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_10.geometry}
          material={materials.Color_007}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_11.geometry}
          material={materials.Metal_Seamed}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_12.geometry}
          material={materials.Sphere}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_13.geometry}
          material={materials.BikiniBottom}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_14.geometry}
          material={materials.BikiniTop}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_15.geometry}
          material={materials.Parole}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_16.geometry}
          material={materials.hair1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_17.geometry}
          material={materials.hairTie1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_18.geometry}
          material={materials.eyeLashes}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_19.geometry}
          material={materials.skinPink}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_20.geometry}
          material={materials.Transparent}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_21.geometry}
          material={materials.EyeWhite}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_22.geometry}
          material={materials.EyeIris1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_23.geometry}
          material={materials.EyeIris2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_24.geometry}
          material={materials.EyeIris3}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_25.geometry}
          material={materials.EyePupil}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_26.geometry}
          material={materials.skin}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_27.geometry}
          material={materials.nipple}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_28.geometry}
          material={materials.SkinLips}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_29.geometry}
          material={materials.skinDark1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_30.geometry}
          material={materials.SkinDark}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_31.geometry}
          material={materials.Color_C08}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_32.geometry}
          material={materials._Color_B02_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_33.geometry}
          material={materials.Color_008}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_34.geometry}
          material={materials.Color_I21}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_35.geometry}
          material={materials.Body1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_36.geometry}
          material={materials.Color_C12}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_37.geometry}
          material={materials.Color_C04}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_38.geometry}
          material={materials.ToeNails1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_39.geometry}
          material={materials.Color_I02}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_40.geometry}
          material={materials.Pupil1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_41.geometry}
          material={materials.hair2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_42.geometry}
          material={materials.M_01___Default1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_43.geometry}
          material={materials.M_02___Default1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_44.geometry}
          material={materials.Vegetation_Blur7}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_45.geometry}
          material={materials._Asphalt_New_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_46.geometry}
          material={materials.GDLM55_CAR_BLACK}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_47.geometry}
          material={materials.GDLM56_CAR_BODY5}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_48.geometry}
          material={materials.GDLM60_CAR_GLASS}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_49.geometry}
          material={materials.GDLM63_CAR_GREY}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_50.geometry}
          material={materials.GDLM57_CAR_BRAKELIGHT}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_51.geometry}
          material={materials.GDLM58_CAR_CHROME}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_52.geometry}
          material={materials.GDLM59_CAR_FRONTLIGHT}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_53.geometry}
          material={materials.GDLM61_CAR_INTERIOR}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_54.geometry}
          material={materials.GDLM62_CAR_SIDELIGHT}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_55.geometry}
          material={materials.seabean_clean_middle}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_56.geometry}
          material={materials.seabean_clean_bottom}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_57.geometry}
          material={materials.seabean_clean_top}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_58.geometry}
          material={materials._Groundcover_Wood_Mix_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_59.geometry}
          material={materials.Water_Pool_Light}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_60.geometry}
          material={materials.Logo_Auger}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_61.geometry}
          material={materials.Wood_Board_Cork}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_62.geometry}
          material={materials._Color_000_22}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_63.geometry}
          material={materials.Translucent_Glass_Gray}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_64.geometry}
          material={materials._Color_006_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_65.geometry}
          material={materials.ananas_inneneseite}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_66.geometry}
          material={materials._Groundcover_RiverRock_4inch_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_67.geometry}
          material={materials._Translucent_Glass_Gray_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_68.geometry}
          material={materials._Water_Deep_2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_69.geometry}
          material={materials.cocktailpamle_rot}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_70.geometry}
          material={materials._Color_A01_10}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_71.geometry}
          material={materials._Color_A01_9}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_72.geometry}
          material={materials._Water_Deep_3}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_73.geometry}
          material={materials.cocktailpamle_rot_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_74.geometry}
          material={materials.Roofing_Shingles_Multi}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_75.geometry}
          material={materials.Cladding_Stucco_White}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_76.geometry}
          material={materials.Vegetation_Grass_Artificial}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_77.geometry}
          material={materials.Groundcover_Gravel_Indian}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_78.geometry}
          material={materials._Stone_Sandstone_Ashlar_Light_1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_79.geometry}
          material={materials.Brick_Pavers_Modular}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.son_80.geometry}
          material={materials.Fencing_Picket_Concave}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/son.glb");
